<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>愤怒的二档</title>
  
  <subtitle>在你没有成就之前，没人会在意你的自尊</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://erdang.github.io/"/>
  <updated>2020-11-24T03:59:35.955Z</updated>
  <id>https://erdang.github.io/</id>
  
  <author>
    <name>愤怒的二档</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何优雅处理前端异常？</title>
    <link href="https://erdang.github.io/2020/11/23/error/"/>
    <id>https://erdang.github.io/2020/11/23/error/</id>
    <published>2020-11-23T05:59:20.000Z</published>
    <updated>2020-11-24T03:59:35.955Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;一、为什么要处理异常&quot;&gt;&lt;a href=&quot;#一、为什么要处理异常&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="error" scheme="https://erdang.github.io/categories/error/"/>
    
    
      <category term="异常" scheme="https://erdang.github.io/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>一篇文章搞懂前端路由原理解析和实现方式</title>
    <link href="https://erdang.github.io/2020/11/18/route/"/>
    <id>https://erdang.github.io/2020/11/18/route/</id>
    <published>2020-11-18T02:15:54.000Z</published>
    <updated>2020-11-18T10:07:08.193Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h4 id=&quot;什么是前端路由&quot;&gt;&lt;a href=&quot;#什么是前端路由&quot; class=&quot;headerlink&quot; title=&quot;什么是前端路由&quot;&gt;&lt;/a&gt;什么是前端路由&lt;/h4&gt;&lt;p&gt;路由的概念来源于服务端，在服务端中路由描述的是 URL
        
      
    
    </summary>
    
    
      <category term="route" scheme="https://erdang.github.io/categories/route/"/>
    
    
      <category term="route" scheme="https://erdang.github.io/tags/route/"/>
    
      <category term="路由" scheme="https://erdang.github.io/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>bash</title>
    <link href="https://erdang.github.io/2020/11/10/bash/"/>
    <id>https://erdang.github.io/2020/11/10/bash/</id>
    <published>2020-11-10T06:35:27.000Z</published>
    <updated>2020-11-11T07:56:31.694Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h4 id=&quot;学习命令行&quot;&gt;&lt;a href=&quot;#学习命令行&quot; class=&quot;headerlink&quot; title=&quot;学习命令行&quot;&gt;&lt;/a&gt;学习命令行&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;规则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#&lt;/code&gt;
        
      
    
    </summary>
    
    
      <category term="bash" scheme="https://erdang.github.io/categories/bash/"/>
    
    
      <category term="bash" scheme="https://erdang.github.io/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>浅谈浏览器与node中的事件循环</title>
    <link href="https://erdang.github.io/2020/10/26/loop/"/>
    <id>https://erdang.github.io/2020/10/26/loop/</id>
    <published>2020-10-26T08:36:29.000Z</published>
    <updated>2020-11-20T06:42:27.766Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;浅谈浏览器与node中的事件循环&quot;&gt;&lt;a href=&quot;#浅谈浏览器与node中的事件循环&quot; class=&quot;headerlink&quot; title=&quot;浅谈浏览器与node中的事件循环&quot;&gt;&lt;/a&gt;浅谈浏览器与node中的事件循环&lt;/h2&gt;&lt;p&gt; 
        
      
    
    </summary>
    
    
      <category term="node" scheme="https://erdang.github.io/categories/node/"/>
    
    
      <category term="js" scheme="https://erdang.github.io/tags/js/"/>
    
      <category term="事件循环" scheme="https://erdang.github.io/tags/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    
      <category term="node" scheme="https://erdang.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>setTimeout 和 setInterval 的区别及相互模拟</title>
    <link href="https://erdang.github.io/2020/10/23/time/"/>
    <id>https://erdang.github.io/2020/10/23/time/</id>
    <published>2020-10-23T08:36:28.000Z</published>
    <updated>2020-11-10T06:45:24.614Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;setTimeout 和 setInterval 的区别及相互模拟&lt;br&gt;最近在复习 node的事件循环和浏览器的事件循环，突然想起setTimeout 和 setInterval 特此记录一下&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
      <category term="js" scheme="https://erdang.github.io/categories/js/"/>
    
    
      <category term="js" scheme="https://erdang.github.io/tags/js/"/>
    
      <category term="setTimeout" scheme="https://erdang.github.io/tags/setTimeout/"/>
    
      <category term="setInterval" scheme="https://erdang.github.io/tags/setInterval/"/>
    
  </entry>
  
  <entry>
    <title>函数的节流与去抖</title>
    <link href="https://erdang.github.io/2020/07/22/dene/"/>
    <id>https://erdang.github.io/2020/07/22/dene/</id>
    <published>2020-07-22T10:06:49.038Z</published>
    <updated>2020-11-13T07:11:27.506Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;优化高频率执行js代码的一种手段，js中的一些事件如浏览器的resize、scroll，鼠标的mousemove、mouseover，input输入框的keypress等事件在触发时，会不断地调用绑定在事件上的回调函数，极大地浪费资源，降低前端性能。为了优化体验，需要对这类
        
      
    
    </summary>
    
    
    
      <category term="js" scheme="https://erdang.github.io/tags/js/"/>
    
      <category term="节流" scheme="https://erdang.github.io/tags/%E8%8A%82%E6%B5%81/"/>
    
      <category term="去抖" scheme="https://erdang.github.io/tags/%E5%8E%BB%E6%8A%96/"/>
    
  </entry>
  
</feed>
